Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> s
Rule 1     s -> e
Rule 2     e -> e SUMA t
Rule 3     e -> e RESTA t
Rule 4     e -> t
Rule 5     e -> e MULTIPLICACION t
Rule 6     e -> e DIVISION t
Rule 7     t -> f
Rule 8     f -> ID
Rule 9     f -> ParA e ParC

Terminals, with rules where they appear

DIVISION             : 6
ID                   : 8
MULTIPLICACION       : 5
ParA                 : 9
ParC                 : 9
RESTA                : 3
SUMA                 : 2
error                : 

Nonterminals, with rules where they appear

e                    : 1 2 3 5 6 9
f                    : 7
s                    : 0
t                    : 2 3 4 5 6

Parsing method: LALR

state 0

    (0) S' -> . s
    (1) s -> . e
    (2) e -> . e SUMA t
    (3) e -> . e RESTA t
    (4) e -> . t
    (5) e -> . e MULTIPLICACION t
    (6) e -> . e DIVISION t
    (7) t -> . f
    (8) f -> . ID
    (9) f -> . ParA e ParC

    ID              shift and go to state 5
    ParA            shift and go to state 6

    s                              shift and go to state 1
    e                              shift and go to state 2
    t                              shift and go to state 3
    f                              shift and go to state 4

state 1

    (0) S' -> s .



state 2

    (1) s -> e .
    (2) e -> e . SUMA t
    (3) e -> e . RESTA t
    (5) e -> e . MULTIPLICACION t
    (6) e -> e . DIVISION t

    $end            reduce using rule 1 (s -> e .)
    SUMA            shift and go to state 7
    RESTA           shift and go to state 8
    MULTIPLICACION  shift and go to state 9
    DIVISION        shift and go to state 10


state 3

    (4) e -> t .

    SUMA            reduce using rule 4 (e -> t .)
    RESTA           reduce using rule 4 (e -> t .)
    MULTIPLICACION  reduce using rule 4 (e -> t .)
    DIVISION        reduce using rule 4 (e -> t .)
    $end            reduce using rule 4 (e -> t .)
    ParC            reduce using rule 4 (e -> t .)


state 4

    (7) t -> f .

    SUMA            reduce using rule 7 (t -> f .)
    RESTA           reduce using rule 7 (t -> f .)
    MULTIPLICACION  reduce using rule 7 (t -> f .)
    DIVISION        reduce using rule 7 (t -> f .)
    $end            reduce using rule 7 (t -> f .)
    ParC            reduce using rule 7 (t -> f .)


state 5

    (8) f -> ID .

    SUMA            reduce using rule 8 (f -> ID .)
    RESTA           reduce using rule 8 (f -> ID .)
    MULTIPLICACION  reduce using rule 8 (f -> ID .)
    DIVISION        reduce using rule 8 (f -> ID .)
    $end            reduce using rule 8 (f -> ID .)
    ParC            reduce using rule 8 (f -> ID .)


state 6

    (9) f -> ParA . e ParC
    (2) e -> . e SUMA t
    (3) e -> . e RESTA t
    (4) e -> . t
    (5) e -> . e MULTIPLICACION t
    (6) e -> . e DIVISION t
    (7) t -> . f
    (8) f -> . ID
    (9) f -> . ParA e ParC

    ID              shift and go to state 5
    ParA            shift and go to state 6

    e                              shift and go to state 11
    t                              shift and go to state 3
    f                              shift and go to state 4

state 7

    (2) e -> e SUMA . t
    (7) t -> . f
    (8) f -> . ID
    (9) f -> . ParA e ParC

    ID              shift and go to state 5
    ParA            shift and go to state 6

    t                              shift and go to state 12
    f                              shift and go to state 4

state 8

    (3) e -> e RESTA . t
    (7) t -> . f
    (8) f -> . ID
    (9) f -> . ParA e ParC

    ID              shift and go to state 5
    ParA            shift and go to state 6

    t                              shift and go to state 13
    f                              shift and go to state 4

state 9

    (5) e -> e MULTIPLICACION . t
    (7) t -> . f
    (8) f -> . ID
    (9) f -> . ParA e ParC

    ID              shift and go to state 5
    ParA            shift and go to state 6

    t                              shift and go to state 14
    f                              shift and go to state 4

state 10

    (6) e -> e DIVISION . t
    (7) t -> . f
    (8) f -> . ID
    (9) f -> . ParA e ParC

    ID              shift and go to state 5
    ParA            shift and go to state 6

    t                              shift and go to state 15
    f                              shift and go to state 4

state 11

    (9) f -> ParA e . ParC
    (2) e -> e . SUMA t
    (3) e -> e . RESTA t
    (5) e -> e . MULTIPLICACION t
    (6) e -> e . DIVISION t

    ParC            shift and go to state 16
    SUMA            shift and go to state 7
    RESTA           shift and go to state 8
    MULTIPLICACION  shift and go to state 9
    DIVISION        shift and go to state 10


state 12

    (2) e -> e SUMA t .

    SUMA            reduce using rule 2 (e -> e SUMA t .)
    RESTA           reduce using rule 2 (e -> e SUMA t .)
    MULTIPLICACION  reduce using rule 2 (e -> e SUMA t .)
    DIVISION        reduce using rule 2 (e -> e SUMA t .)
    $end            reduce using rule 2 (e -> e SUMA t .)
    ParC            reduce using rule 2 (e -> e SUMA t .)


state 13

    (3) e -> e RESTA t .

    SUMA            reduce using rule 3 (e -> e RESTA t .)
    RESTA           reduce using rule 3 (e -> e RESTA t .)
    MULTIPLICACION  reduce using rule 3 (e -> e RESTA t .)
    DIVISION        reduce using rule 3 (e -> e RESTA t .)
    $end            reduce using rule 3 (e -> e RESTA t .)
    ParC            reduce using rule 3 (e -> e RESTA t .)


state 14

    (5) e -> e MULTIPLICACION t .

    SUMA            reduce using rule 5 (e -> e MULTIPLICACION t .)
    RESTA           reduce using rule 5 (e -> e MULTIPLICACION t .)
    MULTIPLICACION  reduce using rule 5 (e -> e MULTIPLICACION t .)
    DIVISION        reduce using rule 5 (e -> e MULTIPLICACION t .)
    $end            reduce using rule 5 (e -> e MULTIPLICACION t .)
    ParC            reduce using rule 5 (e -> e MULTIPLICACION t .)


state 15

    (6) e -> e DIVISION t .

    SUMA            reduce using rule 6 (e -> e DIVISION t .)
    RESTA           reduce using rule 6 (e -> e DIVISION t .)
    MULTIPLICACION  reduce using rule 6 (e -> e DIVISION t .)
    DIVISION        reduce using rule 6 (e -> e DIVISION t .)
    $end            reduce using rule 6 (e -> e DIVISION t .)
    ParC            reduce using rule 6 (e -> e DIVISION t .)


state 16

    (9) f -> ParA e ParC .

    SUMA            reduce using rule 9 (f -> ParA e ParC .)
    RESTA           reduce using rule 9 (f -> ParA e ParC .)
    MULTIPLICACION  reduce using rule 9 (f -> ParA e ParC .)
    DIVISION        reduce using rule 9 (f -> ParA e ParC .)
    $end            reduce using rule 9 (f -> ParA e ParC .)
    ParC            reduce using rule 9 (f -> ParA e ParC .)

