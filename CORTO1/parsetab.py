
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftSUMARESTAleftMULTIPLICACIONDIVISIONDIVISION ID MULTIPLICACION ParA ParC RESTA SUMA s\t: e e\t: e SUMA t \n            | e RESTA t  e : t e\t: e MULTIPLICACION t \n            | e DIVISION t  t : f f\t: ID  f\t: ParA e ParC '
    
_lr_action_items = {'ID':([0,6,7,8,9,10,],[5,5,5,5,5,5,]),'ParA':([0,6,7,8,9,10,],[6,6,6,6,6,6,]),'$end':([1,2,3,4,5,12,13,14,15,16,],[0,-1,-4,-7,-8,-2,-3,-5,-6,-9,]),'SUMA':([2,3,4,5,11,12,13,14,15,16,],[7,-4,-7,-8,7,-2,-3,-5,-6,-9,]),'RESTA':([2,3,4,5,11,12,13,14,15,16,],[8,-4,-7,-8,8,-2,-3,-5,-6,-9,]),'MULTIPLICACION':([2,3,4,5,11,12,13,14,15,16,],[9,-4,-7,-8,9,-2,-3,-5,-6,-9,]),'DIVISION':([2,3,4,5,11,12,13,14,15,16,],[10,-4,-7,-8,10,-2,-3,-5,-6,-9,]),'ParC':([3,4,5,11,12,13,14,15,16,],[-4,-7,-8,16,-2,-3,-5,-6,-9,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'s':([0,],[1,]),'e':([0,6,],[2,11,]),'t':([0,6,7,8,9,10,],[3,3,12,13,14,15,]),'f':([0,6,7,8,9,10,],[4,4,4,4,4,4,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> s","S'",1,None,None,None),
  ('s -> e','s',1,'p_S','gramatica2.py',68),
  ('e -> e SUMA t','e',3,'p_Exp','gramatica2.py',72),
  ('e -> e RESTA t','e',3,'p_Exp','gramatica2.py',73),
  ('e -> t','e',1,'p_etiqueta','gramatica2.py',86),
  ('e -> e MULTIPLICACION t','e',3,'p_T','gramatica2.py',90),
  ('e -> e DIVISION t','e',3,'p_T','gramatica2.py',91),
  ('t -> f','t',1,'p_tf','gramatica2.py',106),
  ('f -> ID','f',1,'p_F_ID','gramatica2.py',110),
  ('f -> ParA e ParC','f',3,'p_F_PAR','gramatica2.py',114),
]
